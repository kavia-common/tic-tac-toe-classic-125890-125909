{"is_source_file": true, "format": "Kotlin", "description": "This file contains the implementation of the main activity for a Tic Tac Toe game on Android, managing game state, UI interactions, and game logic.", "external_files": ["res/layout/activity_main.xml", "res/values/strings.xml", "res/values/colors.xml"], "external_methods": ["resources.getColor", "setContentView", "findViewById", "getString"], "published": ["MainActivity"], "classes": [{"name": "MainActivity", "description": "An Android Activity class that implements the Tic Tac Toe game interface and logic."}], "methods": [{"name": "onCreate", "description": "Initializes the activity, binds UI components, and starts a new game or restores previous state."}, {"name": "bindViews", "description": "Binds UI components from layout to variables."}, {"name": "setupGrid", "description": "Sets click listeners for the game grid cells."}, {"name": "setupPlayerSelection", "description": "Sets up the player choice RadioButtons and their listener."}, {"name": "setupReset", "description": "Sets the reset button's click listener."}, {"name": "selectedPlayer", "description": "Returns the currently selected starting player ('X' or 'O')."}, {"name": "startNewGameFromSelection", "description": "Resets game state and UI for a new game based on initial player selection."}, {"name": "onCellClicked", "description": "Handles the logic for when a grid cell is clicked, including move application, win detection, and turn switching."}, {"name": "disableAllCells", "description": "Disables all grid cells to prevent further moves."}, {"name": "findWinningCombo", "description": "Checks the board for a winning combination and returns it if found."}, {"name": "highlightWinning", "description": "Highlights the winning cells on the grid."}, {"name": "resetCellVisual", "description": "Resets the visual style of a cell."}, {"name": "applyCellMoveVisual", "description": "Updates a cell's display to show a move."}, {"name": "updateStatus", "description": "Updates the status TextView to show whose turn it is."}, {"name": "resetGame", "description": "Resets the game to its initial state."}, {"name": "onSaveInstanceState", "description": "Saves current game state for activity recreation."}, {"name": "restoreState", "description": "Restores game state from saved data, updating UI accordingly."}], "calls": ["setContentView", "findViewById", "resources.getColor", "resources.getColor", "resources.getColor", "resources.getColor", "resources.getColor", "resources.getColor", "resources.getColor", "resources.getColor", "resources.getColor", "resources.getColor", "resources.getColor", "resources.getColor", "resources.getColor"], "search-terms": ["Android Kotlin TicTacToe", "MainActivity game logic", "UI binding Kotlin", "win detection TicTacToe Android", "highlight winning line Kotlin", "activity state restore", "grid game Android Kotlin"], "state": 2, "file_id": 3, "knowledge_revision": 7, "git_revision": "", "hash": "2ea02b45500958a1a95c91ad1f445390", "format-version": 4, "code-base-name": "android_frontend", "filename": "android_frontend/app/src/main/kotlin/org/example/app/MainActivity.kt", "revision_history": [{"7": ""}]}